{% extends 'layout/edit.twig' %}

{% block header %}
    <script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        var bundle = "{{ bundle }}";
        var file = "{{ file }}";
        {% if displayId != null %}
        var displayId = {{ displayId }};
        {% else %}
        var displayId = null;
        {% endif %}
    </script>
    <style>
        label {
            color: white;
        }
        canvas {
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            -moz-font-smoothing:antialiased;
            font-smoothing:antialiased;
            text-rendering:geometricPrecision;
            font-smooth:always;
        }
    </style>
{% endblock %}

{% block body %}
    <div id="imageLayer" class="ui modal">
        <div class="header">{{ t("admin.editSlide.insertImage") }}</div>
        <div id="dropzone" class="scrolling content">
            <div class="ui info message">{{ t("admin.editSlide.dropToUpload") }}</div>
            <div id="imageList" class="ui three stackable cards">

            </div>
        </div>
        <div class="actions">
            <div class="ui cancel button">{{ t("actions.cancel") }}</div>
        </div>
    </div>

    <div class="ui menu">
        <div class="item">
            <div class="ui inverted buttons">
                <a href="#" onclick="addHeader('header')" class="ui basic icon button"><i
                            class="ui heading icon"></i></a>
                <a href="#" onclick="addText('paragraph text')" class="ui basic icon button"><i
                            class="ui paragraph icon"></i></a>
                <a href="#" onclick="openImageBrowser()" class="ui basic icon button"><i
                            class="ui image icon"></i></a>
            </div>
        </div>
        <div class="item">
            <div class="ui inverted buttons">
                <a href="#" onclick="copyObject()" class="ui basic  icon button"><i
                            class="ui copy icon"></i></a>
                <a href="#" onclick="pasteObject()" class="ui basic  icon button"><i
                            class="ui paste icon"></i></a>
                <a href="#" onclick="removeSelectedObjects()" class="ui basic  icon button"><i
                            class="ui remove icon"></i></a>
            </div>
        </div>
        <!--  <div class="item">
            <div id="order" class="ui dropdown basic button">
                <div class="default text">{{ t("admin.editSlide.order") }} <i class="dropdown icon"></i></div>
                <div class="menu">
                    <div class="item" data-value="bringToFront">{{ t("admin.editSlide.sendToFront") }}</div>
                    <div class="item" data-value="bringForward">{{ t("admin.editSlide.moveForward") }}</div>
                    <div class="item" data-value="sendBackwards">{{ t("admin.editSlide.moveBackward") }}</div>
                    <div class="item" data-value="sendToBack">{{ t("admin.editSlide.sendToBack") }}</div>
                </div>
            </div>
        </div> -->

        <div class="item">
            <div class="ui inverted buttons">
                <a href="#" onclick="setAlign('left')" class="ui basic icon button"><i
                            class="ui align left icon"></i></a>
                <a href="#" onclick="setAlign('center')" class="ui basic icon button"><i
                            class="ui align center icon"></i></a>
                <a href="#" onclick="setAlign('right')" class="ui basic icon button"><i
                            class="ui align right icon"></i></a>
                <a href="#" onclick="setAlign('justify')" class="ui basic icon button"><i
                            class="ui align justify icon"></i></a>
            </div>
        </div>

        <div class="item">
            <div class="ui input">
                <input type="number" id="duration" placeholder="{{ t("navs.duration") }}" min="5"/>
            </div>
        </div>
        <div class="item">
            <div id="override" class="ui checkbox">
                <input id="lbl2" type="checkbox"/>
                <label for="lbl2">{{ t("navs.override") }} </label>
            </div>

            <div id="displaytime" class="ui toggle checkbox">
                <input id="lbl" type="checkbox"/>
                <label for="lbl">{{ t("navs.time") }}</label>
            </div>
        </div>
        <div id="transitions" class="ui dropdown item">
            <div class="ui small breadcrumb">
                <span class="section">{{ t("navs.transition") }}</span>
                <i class="right chevron icon divider"></i>
                <span id="currentTransition" class="section"></span>
            </div>
            <i class="dropdown icon"></i>
        </div>
        <div class="right menu">
            <div class="item">
                <div class="ui buttons">
                    <a href="#" onclick="save()" class="ui green button">{{ t("actions.save") }}</a>
                    {% if displayId != null %}
                        <a href="#" onclick="cueSlide()" class="ui basic teal button">{{ t("actions.announce") }}</a>
                    {% endif %}
                    <a href="#" onclick="window.close()" class="ui red button">{{ t("actions.cancel") }}</a>
                </div>
            </div>
        </div>
    </div>

    <div class="ui basic segment">
        <div id="matchsize">
            <canvas id="edit" width="1280" height="720" style="position: fixed; z-index:10;"></canvas>
            <div id="bg">
                <img id="bgimg" class="fsimage" src=""/>
            </div>
            <video muted loop autoplay id="bgvid2" poster="">
            </video>
            <div id="time2" class="noselect delay animated">00:00</div>
        </div>
    </div>

    <div id="contextmenu" class="ui small vertical menu" style="display: none; position: absolute; z-index: 1000;">
        <a class="item" data-action="copy">
            {{ t("actions.copy") }}
        </a>
        <a class="item" data-action="paste">
            {{ t("actions.paste") }}
        </a>
        <div class="ui dropdown item">
            <i class="dropdown icon"></i>
            {{ t("admin.editSlide.order") }}
            <div class="menu">
                <div class="item" data-action="bringToFront">{{ t("admin.editSlide.sendToFront") }}</div>
                <div class="item" data-action="bringForward">{{ t("admin.editSlide.moveForward") }}</div>
                <div class="item" data-action="sendBackwards">{{ t("admin.editSlide.moveBackward") }}</div>
                <div class="item" data-action="sendToBack">{{ t("admin.editSlide.sendToBack") }}</div>
            </div>
        </div>
        <a class="item" data-action="delete">
            {{ t("actions.delete") }}
        </a>
    </div>
    <canvas id="tempCanvas" width="1280" height="720" style="display: none"></canvas>

    <script>
        var socket = io.connect("{{ config.serverUrl }}:{{ config.serverListenPort }}/admin");
    </script>
    <script>
        var images = {};

        $(document).ready(function () {
            var opts = {
                dragClass: "active",
                on: {
                    load: function (e, file) {
                        // check file type
                        var imageType = /image.(jpeg|png)/;
                        if (!file.type.match(imageType)) {
                            //  alert("File \"" + file.name + "\" is not a valid image file, only jpeg and png are supported");
                            return false;
                        }

                        // check file size
                        if (parseInt(file.size / 1024) > 2050) {
                            alert("File \"" + file.name + "\" is too big. Max allowed size is 2 MB.");
                            return false;
                        }

                        createBox(e, file);
                    },
                }
            };

            FileReaderJS.setupDrop(document.getElementById('dropzone'), opts);
            FileReaderJS.setupClipboard(document.body, opts);
        });


        function createBox(e, file) {
            var uid = uuidv4();
            var imgName = file.name;

            var src = e.target.result;
            var tempCanvas = new fabric.StaticCanvas("tempCanvas", {width: 1280, height: 720});
            tempCanvas.backgroundColor = null;
            tempCanvas.backgroundImage = null;

            fabric.Image.fromURL(src, function (bgImage) {

                var canvasAspect = tempCanvas.width / tempCanvas.height;
                var imgAspect = bgImage.width / bgImage.height;
                var left, top, scaleFactor;

                if (canvasAspect >= imgAspect) {
                    scaleFactor = tempCanvas.width / bgImage.width;
                    left = 0;
                    top = -((bgImage.height * scaleFactor) - tempCanvas.height) / 2;
                } else {
                    scaleFactor = tempCanvas.height / bgImage.height;
                    top = 0;
                    left = -((bgImage.width * scaleFactor) - tempCanvas.width) / 2;
                }

                bgImage.set({
                    top: top,
                    left: left,
                    originX: 'left',
                    originY: 'top',
                    scaleX: scaleFactor,
                    scaleY: scaleFactor
                });

                bgImage.lockUniScaling = true;
                tempCanvas.add(bgImage);
                tempCanvas.renderAll();

                images[uid] = {data: src, crop: tempCanvas.toDataURL(), name: imgName, type: file.type};

                var template = ` <div class="ui card" id="${uid}">
        <div class="image">
            <img class="" src="${src}" alt="image">
        </div>
        <div class="content">
            <div class="center aligned header">${imgName}</div>
        </div>
        <div class="extra content">
            <div class="ui tiny basic button" onclick="upload('${uid}', 'original');">{{ t("actions.upload") }}</div>
            <div class="ui tiny basic button" onclick="upload('${uid}', 'scale');">{{ t("actions.uploadScale") }}</div>
            <div class="ui tiny basic button" onclick="upload('${uid}', 'createSlide');">{{ t("actions.createNewSlide") }}</div>
            <div class="ui tiny basic button" onclick="cancelUpload('${uid}');">{{ t("actions.cancel") }}</div>
        </div>
    </div>`;
                $("#imageList").append(template);
            });

        }


        function upload(uid, type) {

            if (images[uid] !== null) {
                var busyTemplate = `<div class="card">
                                    <div class="ui active dimmer">
                                        <div class="ui text loader">Uploading</div>
                                    </div>
                            </div>`;

                let filename = images[uid].name.replace(/\.[^/.]+$/, "");

                switch (type) {
                    case "original":
                        $("#" + uid).html(busyTemplate);
                        socket.emit("edit.uploadImage", {
                            bundleName: bundle,
                            name: filename,
                            imageData: images[uid].data,
                            type: images[uid].type,
                        });
                        delete (images[uid]);
                        break;
                    case "scale":
                        $("#" + uid).html(busyTemplate);
                        socket.emit("edit.uploadImage", {
                            bundleName: bundle,
                            name: filename + "_crop",
                            imageData: images[uid].crop,
                            type: "image/png",
                        });
                        delete (images[uid]);
                        break;
                    case "createSlide":
                        saveAsFullScreenImage(filename, images[uid].data);
                        $("#" + uid).remove();
                        delete (images[uid]);
                        break;
                }

            }
        }

        function addImagesFromUploadQueue() {

            for (var i in images) {
                var uid = i;
                var image = images[i];
                var template = ` <div class="ui card" id="${uid}">
        <div class="image">
            <img class="" src="${image.data}" alt="image">
        </div>
        <div class="content">
            <div class="center aligned header">${image.name}</div>
        </div>
        <div class="extra content">
            <div class="ui tiny basic button" onclick="upload('${uid}', 'original');">{{ t("actions.upload") }}</div>
            <div class="ui tiny basic button" onclick="upload('${uid}', 'scale');">{{ t("actions.uploadScale") }}</div>
            <div class="ui tiny basic button" onclick="upload('${uid}', 'createSlide');">{{ t("actions.createNewSlide") }}</div>
            <div class="ui tiny basic button" onclick="cancelUpload('${uid}');">{{ t("actions.cancel") }}</div>
        </div>
    </div>`;
                $("#imageList").append(template);
            }
        }

        function cancelUpload(uid) {
            delete images[uid];
            $("#" + uid).remove();
        }
    </script>
    <script src="/js/edit.js"></script>
{% endblock %}


